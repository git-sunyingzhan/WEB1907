6）定位
	定义元素相对于正常位置应该出现的位置
	a.流定位（流布局）	符合标准文档流（默认定位）
		块级元素		从上往下
		行内元素		从左往右
	b.浮动定位		脱离标准文档流，让出原来位置，
		float:left|right;
		a.浮动会对下面的节点有影响
		b.父元素浮动会对子元素有影响
		
		
		清除浮动带来的影响
			clear:left|right|both;
			left|right:代表元素左边或者右边不允许有浮动元素
			both:代表两边不允许有浮动元素
			哪个元素受到影响，就在哪个元素里面写clear
	c.position定位
		相对定位：relative
			相对与自己原来的位置，不脱离文档流，不让出原来位置。
		绝对定位：absolute
			相对于定位过了的元素，如果没有定位了的祖先元素，则按照最初包含块的位置定位，脱离标准文档流，让出原来的位置。
		固定定位：fixed
			以当前窗口为参照点，脱离标准文档流，让出原来位置。
7)堆叠效果
	z-index:数值;	数值越大，距离用户越近。（使用结合position）
	
JS概述
	1）概念
		JS全称：JavaScript	一门客户端脚本语言
		a.js可以直接嵌入在html页面中，由浏览器解析执行，不进行预编译
		b.用于向页面添加动态交互行为
		c.具有与java语言类类似的语法，一种网页编程语言。
		操作的两大方向：
			操作DOM元素（HTML文档对象模型）
			操作BOM元素（浏览器对象模型）
	2）JS特点
		解释执行：不需要预编译，逐行执行
		基于对象：内置了大量的现成对象
	3）作用：
		a.实现客户端数据简单计算（复杂计算由后台处理）
		b.客户端表单合法性验证
		c.添加浏览器事件的触发
		d.网页特殊显示效果的制作
		e.服务器的异步数据提交
		
	4）遵循es规范（es6）
		a.严格区分大小写
		b.由数字、字母、下划线、&符号组成，不能以数字开头
		c.命名尽量使用驼峰命名法
	5)JS写法
		a.行内式（定义事件）
			在事件中定义操作，直接写JS代码
			写法：
				在元素行中添加事件，事件中定义操作
				onclick=(alert('😂');)
			事件：
				onclick		鼠标单击
				ondbclick	鼠标双击
				onmouseover	鼠标移入
				onmouseout	鼠标移除
				onkeydown	键盘按下
				onkeyup		键盘抬起
				onblur		失去焦点
				onfocus		获取焦点
		b.内部式
			嵌入在页面<script>标签中（该标签可以设置多个，可以写在任何地方）
			写法：
				setp1:<script>标签中写JS脚本代码
					function 函数名([参数]){函数体；return 返回值；}
				setp2:在元素行中添加时间执行操作；
					事件名="函数名();"
		c.外部式
	
	6)JS注释
		单行注释		//注释文字
		多行注释		/*注释文字*/
		
		PS:不需要页面也可以直接在控制台（console）里面写JS代码，F12（右击检查）-->console
			Enter回车键：执行
			shift+Enter:换行